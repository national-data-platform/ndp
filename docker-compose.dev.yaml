version: "3"

services:
  # starting ckan section
  ckan:
    build:
      context: ckan-docker/ckan
      dockerfile: Dockerfile.dev
      # dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
      - ./src_extensions:/srv/app/src_extensions
      # - ./ckan.ini:/srv/app/ckan.ini
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]


  datapusher:
    extends:
      file: ckan-docker/docker-compose.dev.yml
      service: datapusher

  db:
    extends:
      file: ckan-docker/docker-compose.dev.yml
      service: db

  solr:
    extends:
      file: ckan-docker/docker-compose.dev.yml
      service: solr

  redis:
    extends:
      file: ckan-docker/docker-compose.dev.yml
      service: redis
  
  # starting mlflow section
  minio:
    extends:
      file: mlflow/docker-compose.yaml
      service: minio

  create-s3-buckets:
    extends:
      file: mlflow/docker-compose.yaml
      service: create-s3-buckets

  mlflow:
    extends:
      file: mlflow/docker-compose.yaml
      service: core

  # starting jhub section
  jupyterhub:
    build:
      context: jhub
      dockerfile: Dockerfile
      args:
        JUPYTERHUB_VERSION: latest
    restart: always
    image: jupyterhub
    volumes:
      - "./jhub/jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      - "jupyterhub:/data"
    ports:
      - ${JUPYTERHUB_PROXY_PORT}:${JUPYTERHUB_PROXY_PORT}
    environment:
      - JUPYTERHUB_PROXY_PORT
      - JUPYTERHUB_PORT
      - DOCKER_NETWORK_NAME
      - DOCKER_NOTEBOOK_IMAGE
      - DOCKER_NOTEBOOK_DIR
      # for MLFlow connection:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - MLFLOW_TRACKING_URI
      - MLFLOW_S3_ENDPOINT_URL
      - AWS_BUCKET_NAME
      # keycloak
      - OAUTH2_AUTHORIZE_URL
      - OAUTH2_TOKEN_URL
      - KEYCLOAK_USERDATA_URL
      - JUPYTERHUB_KEYCLOAK_CLIENT_ID
      - JUPYTERHUB_KEYCLOAK_CLIENT_SECRET

  frontend:
    build:
      context: ndp-frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 3000:3000
    environment:
      - KEYCLOAK_ID
      - KEYCLOAK_SECRET
      - KEYCLOAK_ISSUER
      - NEXTAUTH_URL
      - NEXTAUTH_SECRET
      - NEXT_PUBLIC_NDP_PASSWORD
      - NEXT_PUBLIC_CKAN_URL

  nginx:
    image: nginx:alpine3.18-slim
    depends_on:
      - ckan
      - jupyterhub
      - mlflow
    ports:
      - "4000:80"
    environment:
      - CKAN_PORT
      - JUPYTERHUB_PROXY_PORT
      - MLFLOW_PORT
    volumes:
      - ${PWD}/nginx/dev.conf.template:/etc/nginx/templates/nginx.conf.template:ro

volumes:
  ckan_storage:
  pg_data:
  solr_data:
  miniodata:
  jupyterhub: